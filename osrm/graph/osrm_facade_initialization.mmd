graph TD

Title[Initialize Facade with MLD + ImmutableProvider]
Title-->Start
style Title fill:#FFF,stroke:#FFF
linkStyle 0 stroke:#FFF,stroke-width:0;

Start("StartRouted") --> main["auto service_handler = std::make_unique< server::ServiceHandler >(config) <p></p> main.cpp"]
main -.construct.-> constructServiceHandler["ServiceHandler::ServiceHandler(osrm::EngineConfig &config)"]
constructServiceHandler-.constructbase.-> ConstructOsrm["OSRM::OSRM(engine::EngineConfig &config)"]
ConstructOsrm-."In OSRM's constructor, construct".->ConstructEngine["engine_=std::make_unique< engine::Engine< MLD>>(config);"]
ConstructEngine-."In Engine's constructor, depend on config, construct  ".->ConstructFacadeProvide["facade_provider = std::make_unique< ImmutableProvider < Algorithm>>(config.storage_config);"]

subgraph construct allocator
ConstructFacadeProvide-.construct ImmutableProvider.->ConstructImmutableProvider["ImmutableProvider(const storage::StorageConfig &config): facade_factory(std::make_shared< datafacade::ProcessMemoryAllocator>(config))"]
ConstructImmutableProvider-."construct ProcessMemoryAllocator".->ConstructConstructImmutableProvider["ProcessMemoryAllocator::ProcessMemoryAllocator(const storage::StorageConfig &config)"]
end

ConstructConstructImmutableProvider-."construct DataFacadeFactory".->ConstructDataFacadeFactory["DataFacadeFactory(std::shared_ptr< AllocatorT> allocator, std::true_type)"]
ConstructDataFacadeFactory-."Create Facade map based on parameters".->CreateFacadeWithParam["facades[index] = std::make_shared< const Facade>(allocator, metric_name, index);"]
CreateFacadeWithParam-."construct".->ConstrcutContiguousInternalMemoryDataFacadeMLD["ContiguousInternalMemoryDataFacade< MLD>"]
ConstrcutContiguousInternalMemoryDataFacadeMLD-."construct base ".->ConstructContiguousInternalMemoryDataFacadeBase["ContiguousInternalMemoryDataFacadeBase"]
ConstrcutContiguousInternalMemoryDataFacadeMLD-."construct base ".->ConstructContiguousInternalMemoryAlgorithmDataFacadeMLD["ContiguousInternalMemoryAlgorithmDataFacade< MLD>"]
ConstructContiguousInternalMemoryDataFacadeBase-."call InitializeInternalPointers ".->CallBaseInitializeInternalPointers["combine vectors with its pointers <p></p> 'turn_data = make_turn_data_view' <p></p> 'm_name_table = make_name_table_view' <p></p> 'm_turn_weight_penalties = make_turn_weight_view' "]
style CallBaseInitializeInternalPointers fill:#f9f,stroke-dasharray: 5, 5
ConstructContiguousInternalMemoryAlgorithmDataFacadeMLD-."call InitializeInternalPointers ".->CallAlgInitializeInternalPointers["combine vectors with its pointers <p></p> ' mld_partition = make_partition_view' <p></p> ' mld_cell_metric=make_filtered_cell_metric_view' <p></p> 'mld_cell_storage = make_cell_storage_view' <p></p> 'query_graph = make_multi_level_graph_view'  "]
style CallAlgInitializeInternalPointers fill:#f9f,stroke-dasharray: 5, 5

CallBaseInitializeInternalPointers -."finish".->End("End")
CallAlgInitializeInternalPointers -."finish".->End("End")

